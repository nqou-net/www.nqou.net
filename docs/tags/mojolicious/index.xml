<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Mojolicious on nqou.net</title>
        <link>https://www.nqou.net/tags/mojolicious/</link>
        <description>Recent content in Mojolicious on nqou.net</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>ja</language>
        <lastBuildDate>Wed, 13 Dec 2017 10:33:56 +0900</lastBuildDate><atom:link href="https://www.nqou.net/tags/mojolicious/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>DockerでHerokuでMojoliciousが動いたぞ!!!（改定版）</title>
        <link>https://www.nqou.net/2017/12/13/103356/</link>
        <pubDate>Wed, 13 Dec 2017 10:33:56 +0900</pubDate>
        
        <guid>https://www.nqou.net/2017/12/13/103356/</guid>
        <description>（追記） この記事で書いていた Dockerfile が動かなくなっていたので動くように修正した記事を書きました。 以前は動いていた Dockerfile で permission denied が出るようになった話 | nqou.net （</description>
        </item>
        <item>
        <title>DockerでHerokuでMojoliciousが動いたぞ!!!</title>
        <link>https://www.nqou.net/2017/12/03/012037/</link>
        <pubDate>Sun, 03 Dec 2017 01:20:37 +0900</pubDate>
        
        <guid>https://www.nqou.net/2017/12/03/012037/</guid>
        <description>久しぶりに Heroku を使ってみたら、いつの間にかコンテナも使えるようになっていた。 というくらいに全然 Heroku を使っていなかった。 正確に言うと、 Heroku で動かして</description>
        </item>
        <item>
        <title>【2019年4月頃まで有効】Mojolicious::Liteで作ったアプリをHerokuで動かす</title>
        <link>https://www.nqou.net/2017/12/02/170342/</link>
        <pubDate>Sat, 02 Dec 2017 17:03:42 +0900</pubDate>
        
        <guid>https://www.nqou.net/2017/12/02/170342/</guid>
        <description>結構前に書いた heroku で Mojolicious::Lite で作ったアプリを動かす記事が今でも使えるのか確認してみた。 Mojolicious::Liteで作ったアプリをHeroku</description>
        </item>
        <item>
        <title>Mojolicious でファイルがアップロードできる掲示板を作る</title>
        <link>https://www.nqou.net/2016/02/27/164502/</link>
        <pubDate>Sat, 27 Feb 2016 16:45:02 +0900</pubDate>
        
        <guid>https://www.nqou.net/2016/02/27/164502/</guid>
        <description>おはようございます。 若林（@nqounet）です。 Perl入学式のウェブアプリ編では、ファイルのアップロードについては説明していません。 理由</description>
        </item>
        <item>
        <title>JSON::RPC::Spec v1.0.5 をリリースしました</title>
        <link>https://www.nqou.net/2015/11/16/083646/</link>
        <pubDate>Mon, 16 Nov 2015 08:36:46 +0900</pubDate>
        
        <guid>https://www.nqou.net/2015/11/16/083646/</guid>
        <description>おはようございます。 若林（@nqounet）です。 JSON::RPC::Specをアップデートしましたのでお知らせいたします。 JSON::R</description>
        </item>
        <item>
        <title>HerokuではProcletを使うとお得</title>
        <link>https://www.nqou.net/2015/04/13/112530/</link>
        <pubDate>Mon, 13 Apr 2015 11:25:30 +0900</pubDate>
        
        <guid>https://www.nqou.net/2015/04/13/112530/</guid>
        <description>@nqounetです。 前回に続いてHerokuネタです。 この前Mojolicious::Liteで作ったアプリをHerokuで動かす 記事を書</description>
        </item>
        <item>
        <title>Mojolicious::Liteで作ったアプリをHerokuで動かす</title>
        <link>https://www.nqou.net/2015/04/08/114023/</link>
        <pubDate>Wed, 08 Apr 2015 11:40:23 +0900</pubDate>
        
        <guid>https://www.nqou.net/2015/04/08/114023/</guid>
        <description>@nqounetです。 Mojolicious::Liteに限らず、PerlのアプリはHerokuで簡単に動かせる、ということなので試してみま</description>
        </item>
        <item>
        <title>Mojolicious::LiteでPOSTメソッドを使う</title>
        <link>https://www.nqou.net/2015/03/07/071219/</link>
        <pubDate>Sat, 07 Mar 2015 07:12:19 +0900</pubDate>
        
        <guid>https://www.nqou.net/2015/03/07/071219/</guid>
        <description>@nqounetです。 第7回では、フォームに値を残しておく方法を学びました。 ところで、HTTPにはGETメソッドとPOSTメソッドがあります</description>
        </item>
        <item>
        <title>Mojolicious::Liteでテキストボックスに値を入れておく</title>
        <link>https://www.nqou.net/2015/03/05/073344/</link>
        <pubDate>Thu, 05 Mar 2015 07:33:44 +0900</pubDate>
        
        <guid>https://www.nqou.net/2015/03/05/073344/</guid>
        <description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 #!/usr/bin/env perl use Mojolicious::Lite; get &amp;#39;/&amp;#39; =&amp;gt; sub { my $c = shift; my $user = $c-&amp;gt;param(&amp;#39;user&amp;#39;); $c-&amp;gt;stash(hello =&amp;gt; qq{Hello $user!}); $c-&amp;gt;render(template =&amp;gt; &amp;#39;index&amp;#39;); }; app-&amp;gt;start; __DATA__ @@ index.html.ep &amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;title&amp;gt;title&amp;lt;/title&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; %= form_for &amp;#39;/&amp;#39;, begin %=</description>
        </item>
        <item>
        <title>Mojolicious::Liteでテンプレートに値を渡す</title>
        <link>https://www.nqou.net/2015/02/12/081257/</link>
        <pubDate>Thu, 12 Feb 2015 08:12:57 +0900</pubDate>
        
        <guid>https://www.nqou.net/2015/02/12/081257/</guid>
        <description>@nqounetです。 第5回はフォームを使えるようにしました が、何度も入力する場合にはブラウザの「戻る」ボタンを使う必要がありました。 今回は</description>
        </item>
        <item>
        <title>Mojolicious::Liteでフォームを使う</title>
        <link>https://www.nqou.net/2015/02/05/085040/</link>
        <pubDate>Thu, 05 Feb 2015 08:50:40 +0900</pubDate>
        
        <guid>https://www.nqou.net/2015/02/05/085040/</guid>
        <description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 #!/usr/bin/env perl use Mojolicious::Lite; get &amp;#39;/&amp;#39; =&amp;gt; &amp;#39;index&amp;#39;; get &amp;#39;/foo&amp;#39; =&amp;gt; sub { my $c = shift; my $user = $c-&amp;gt;param(&amp;#39;user&amp;#39;); $c-&amp;gt;render(text =&amp;gt; qq{Hello $user!}); }; app-&amp;gt;start; __DATA__ @@ index.html.ep &amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;title&amp;gt;title&amp;lt;/title&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;form action=&amp;#34;/foo&amp;#34;&amp;gt; &amp;lt;input name=&amp;#34;user&amp;#34;</description>
        </item>
        <item>
        <title>Mojolicious::Liteでパラメータを読み取る</title>
        <link>https://www.nqou.net/2015/02/04/075756/</link>
        <pubDate>Wed, 04 Feb 2015 07:57:56 +0900</pubDate>
        
        <guid>https://www.nqou.net/2015/02/04/075756/</guid>
        <description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 #!/usr/bin/env perl use Mojolicious::Lite; get &amp;#39;/&amp;#39; =&amp;gt; sub { my $c = shift; $c-&amp;gt;redirect_to(&amp;#39;/foo?user=nqounet&amp;#39;); }; get &amp;#39;/foo&amp;#39; =&amp;gt; sub { my $c = shift; my $user = $c-&amp;gt;param(&amp;#39;user&amp;#39;); $c-&amp;gt;render(text =&amp;gt; qq{Hello $user!}); }; app-&amp;gt;start; 1 2 #!/usr/bin/env perl use Mojolicious::Lite; 1 2 3 4 get &amp;#39;/&amp;#39; =&amp;gt; sub { my $c = shift; $c-&amp;gt;redirect_to(&amp;#39;/foo?user=nqounet&amp;#39;); };</description>
        </item>
        <item>
        <title>Mojolicious::Liteでルーティングしてみる</title>
        <link>https://www.nqou.net/2015/02/03/073828/</link>
        <pubDate>Tue, 03 Feb 2015 07:38:28 +0900</pubDate>
        
        <guid>https://www.nqou.net/2015/02/03/073828/</guid>
        <description>1 2 3 4 5 6 7 8 9 10 11 12 13 #!/usr/bin/env perl use Mojolicious::Lite; get &amp;#39;/&amp;#39; =&amp;gt; sub { shift-&amp;gt;render(text =&amp;gt; q{Hello World!}); }; get &amp;#39;/foo&amp;#39; =&amp;gt; sub { my $c = shift; $c-&amp;gt;render(text =&amp;gt; q{Foo!}); }; app-&amp;gt;start; 1 2 3 4 5 6 #!/usr/bin/env perl use Mojolicious::Lite; get &amp;#39;/&amp;#39; =&amp;gt; sub { shift-&amp;gt;render(text =&amp;gt; q{Hello World!}); }; 1 2 3 4 get &amp;#39;/foo&amp;#39; =&amp;gt; sub {</description>
        </item>
        <item>
        <title>Mojolicious::Liteでハローワールド</title>
        <link>https://www.nqou.net/2015/02/02/075435/</link>
        <pubDate>Mon, 02 Feb 2015 07:54:35 +0900</pubDate>
        
        <guid>https://www.nqou.net/2015/02/02/075435/</guid>
        <description>1 2 3 4 5 6 7 8 #!/usr/bin/env perl use Mojolicious::Lite; get &amp;#39;/&amp;#39; =&amp;gt; sub { shift-&amp;gt;render(text =&amp;gt; q{ハローワールド！}); }; app-&amp;gt;start; 1 2 #!/usr/bin/env perl use Mojolicious::Lite; 1 2 3 get &amp;#39;/&amp;#39; =&amp;gt; sub { shift-&amp;gt;render(text =&amp;gt; q{ハローワールド！}); }; 1 get(&amp;#39;/&amp;#39;, sub { ... });</description>
        </item>
        <item>
        <title>Mojolicious::Liteのプレースホルダとパラメータ</title>
        <link>https://www.nqou.net/2015/01/31/082426/</link>
        <pubDate>Sat, 31 Jan 2015 08:24:26 +0900</pubDate>
        
        <guid>https://www.nqou.net/2015/01/31/082426/</guid>
        <description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 #!/usr/bin/env perl use utf8; use Mojolicious::Lite; get &amp;#39;/&amp;#39; =&amp;gt; sub { shift-&amp;gt;redirect_to(&amp;#39;/everything/54?name=hoge&amp;#39;); }; get &amp;#39;/everything/:stuff&amp;#39; =&amp;gt; [stuff =&amp;gt; qr/\d+/] =&amp;gt; {stuff =&amp;gt; 23} =&amp;gt; sub { shift-&amp;gt;render(&amp;#39;welcome&amp;#39;); }; app-&amp;gt;log-&amp;gt;level(&amp;#39;error&amp;#39;); app-&amp;gt;start; __DATA__ @@ welcome.html.ep Stuff is &amp;lt;%= $stuff %&amp;gt;. クエリーnameの値は「&amp;lt</description>
        </item>
        <item>
        <title>Mojoliciousでlogディレクトリを作っても画面でログを確認する方法</title>
        <link>https://www.nqou.net/2015/01/26/082143/</link>
        <pubDate>Mon, 26 Jan 2015 08:21:43 +0900</pubDate>
        
        <guid>https://www.nqou.net/2015/01/26/082143/</guid>
        <description>1 2 # Mojolicious::Liteの場合 app-&amp;gt;log-&amp;gt;handle(\*STDERR) if app-&amp;gt;mode eq &amp;#39;development&amp;#39;;</description>
        </item>
        <item>
        <title>なにわPerlに行ってきた #naniwaperl</title>
        <link>https://www.nqou.net/2014/12/14/145155/</link>
        <pubDate>Sun, 14 Dec 2014 14:51:55 +0900</pubDate>
        
        <guid>https://www.nqou.net/2014/12/14/145155/</guid>
        <description></description>
        </item>
        <item>
        <title>厳密なCGIは難しいのでフレームワークを覚えましょう</title>
        <link>https://www.nqou.net/2014/09/11/082056/</link>
        <pubDate>Thu, 11 Sep 2014 08:20:56 +0900</pubDate>
        
        <guid>https://www.nqou.net/2014/09/11/082056/</guid>
        <description>1 2 3 use Mojolicious::Lite; get &amp;#39;/&amp;#39; =&amp;gt; {text =&amp;gt; &amp;#39;Hello World!&amp;#39;}; app-&amp;gt;start; 1 2 3 4 5 6 7 #!/usr/bin/env perl use strict; use warnings; if ($ENV{&amp;#39;REQUEST_METHOD&amp;#39;} eq &amp;#39;GET&amp;#39; and $ENV{&amp;#39;PATH_INFO&amp;#39;} eq &amp;#39;/&amp;#39; or $ENV{&amp;#39;PATH_INFO&amp;#39;} eq &amp;#39;&amp;#39;) { print &amp;#34;Content-Type: text/plain\n\n&amp;#34;; print &amp;#39;Hello World!&amp;#39;; } 1 2 3 4 5 6 7 for my $key (keys %ENV) { print &amp;#34;$key = $ENV{$key}\n&amp;#34;; } # または while (my</description>
        </item>
        <item>
        <title>#Perl入学式 in大阪 第3回をサポートしてきました</title>
        <link>https://www.nqou.net/2014/09/09/084202/</link>
        <pubDate>Tue, 09 Sep 2014 08:42:02 +0900</pubDate>
        
        <guid>https://www.nqou.net/2014/09/09/084202/</guid>
        <description>1 2 3 use Mojolicious::Lite; get &amp;#39;/&amp;#39; =&amp;gt; {text =&amp;gt; &amp;#39;Hello World!&amp;#39;}; app-&amp;gt;start; 1 2 3 4 5 #!/usr/bin/env perl use strict; use warnings; print &amp;#34;Content-Type: text/plain\n\n&amp;#34;; print &amp;#39;Hello World!&amp;#39;;</description>
        </item>
        <item>
        <title>YAPC::Asia Tokyo 2014 1日目に行ってきました #yapcasia</title>
        <link>https://www.nqou.net/2014/08/30/022146/</link>
        <pubDate>Sat, 30 Aug 2014 02:21:46 +0900</pubDate>
        
        <guid>https://www.nqou.net/2014/08/30/022146/</guid>
        <description>1 $ say Ya -o ya</description>
        </item>
        <item>
        <title>JSON::RPC::Liteというモジュールを書きました</title>
        <link>https://www.nqou.net/2014/08/09/101454/</link>
        <pubDate>Sat, 09 Aug 2014 10:14:54 +0900</pubDate>
        
        <guid>https://www.nqou.net/2014/08/09/101454/</guid>
        <description>1 2 3 4 5 6 7 8 use JSON::RPC::Lite; method &amp;#39;echo&amp;#39; =&amp;gt; sub { my ($param) = @_; return $param; }; as_psgi_app; 1 $ plackup app.psgi 1 {&amp;#34;jsonrpc&amp;#34;:&amp;#34;2.0&amp;#34;,&amp;#34;method&amp;#34;:&amp;#34;echo&amp;#34;,&amp;#34;params&amp;#34;:&amp;#34;Hello!&amp;#34;,&amp;#34;id&amp;#34;:1} 1 {&amp;#34;id&amp;#34;:1,&amp;#34;jsonrpc&amp;#34;:&amp;#34;2.0&amp;#34;,&amp;#34;result&amp;#34;:&amp;#34;Hello!&amp;#34;}</description>
        </item>
        <item>
        <title>Mojoliciousでログの書式を変更する</title>
        <link>https://www.nqou.net/2014/06/17/002848/</link>
        <pubDate>Tue, 17 Jun 2014 00:28:48 +0900</pubDate>
        
        <guid>https://www.nqou.net/2014/06/17/002848/</guid>
        <description>1 2 3 4 5 6 7 8 9 10 11 12 sub startup { my $app = shift; $app-&amp;gt;log-&amp;gt;format(sub { my ($time, $level, @lines) = @_; my $time_string = localtime($time); my @caller = caller(4); my $caller = join &amp;#39; &amp;#39;, $caller[0], $caller[2]; return &amp;#34;[$time_string] [$level] [$caller] @lines\n&amp;#34;; }); my $r = $app-&amp;gt;routes; $r-&amp;gt;get(&amp;#39;/&amp;#39;)-&amp;gt;to(&amp;#39;index#start&amp;#39;); }</description>
        </item>
        <item>
        <title>OwlCarouselを使うと簡単にカルーセルが実装できた</title>
        <link>https://www.nqou.net/2014/06/16/004553/</link>
        <pubDate>Mon, 16 Jun 2014 00:45:53 +0900</pubDate>
        
        <guid>https://www.nqou.net/2014/06/16/004553/</guid>
        <description>1 2 3 4 5 6 7 sub startup { my $app = shift; $app-&amp;gt;renderer-&amp;gt;default_format(&amp;#39;json&amp;#39;); my $r = $app-&amp;gt;routes; $r = $r-&amp;gt;under(&amp;#39;/api/v1&amp;#39;); $r-&amp;gt;get(&amp;#39;/images&amp;#39;)-&amp;gt;to(&amp;#39;images#get&amp;#39;); }</description>
        </item>
        <item>
        <title>Mojoliciousでうっかりハマった件</title>
        <link>https://www.nqou.net/2014/04/09/224817/</link>
        <pubDate>Wed, 09 Apr 2014 22:48:17 +0900</pubDate>
        
        <guid>https://www.nqou.net/2014/04/09/224817/</guid>
        <description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 use Mojolicious::Lite; use Text::LTSV; get &amp;#39;/&amp;#39; =&amp;gt; sub { my $self = shift; my $p = Text::LTSV-&amp;gt;new; my $datafile = &amp;#39;hoge.ltsv&amp;#39;; my $data = $p-&amp;gt;parse_file($datafile) or die; $self-&amp;gt;stash(data =&amp;gt; $data); $self-&amp;gt;render(&amp;#39;index&amp;#39;); }; app-&amp;gt;start; __DATA__ @@ index.html.ep % for my $line (@{$data}) { &amp;lt;a href=&amp;#34;&amp;lt;%= $line-&amp;gt;{url} %&amp;gt;&amp;#34;&amp;gt;&amp;lt;%= $line-&amp;gt;{url} %&amp;gt;&amp;lt;/a&amp;gt; % }</description>
        </item>
        <item>
        <title>Mojolicious::Plugin::JSON_XSを書いた</title>
        <link>https://www.nqou.net/2014/01/18/171500/</link>
        <pubDate>Sat, 18 Jan 2014 17:15:00 +0900</pubDate>
        
        <guid>https://www.nqou.net/2014/01/18/171500/</guid>
        <description>@nqounetです． MojoliciousでJSONを使う時は，renderメソッドにjsonを指定してやると変数をそのままJSONにして</description>
        </item>
        <item>
        <title>講話してきました</title>
        <link>https://www.nqou.net/2013/09/28/154100/</link>
        <pubDate>Sat, 28 Sep 2013 15:41:00 +0900</pubDate>
        
        <guid>https://www.nqou.net/2013/09/28/154100/</guid>
        <description></description>
        </item>
        <item>
        <title>GitPrepを動かしてみた</title>
        <link>https://www.nqou.net/2013/04/23/200400/</link>
        <pubDate>Tue, 23 Apr 2013 20:04:00 +0900</pubDate>
        
        <guid>https://www.nqou.net/2013/04/23/200400/</guid>
        <description></description>
        </item>
        <item>
        <title>あの reveal.js でのプレゼンを Markdown で簡単に書けるようにした</title>
        <link>https://www.nqou.net/2013/02/09/162200/</link>
        <pubDate>Sat, 09 Feb 2013 16:22:00 +0900</pubDate>
        
        <guid>https://www.nqou.net/2013/02/09/162200/</guid>
        <description>1 2 curl -L http://cpanmin.us | perl - --self-upgrade cpanm Mojolicious Path::Class Text::Markdown 1 2 3 4 5 6 7 8 git clone git://github.com/nqounet/p5-md2reveal.git cd p5-md2reveal mv md2reveal.conf.sample md2reveal.conf mv assets/example.md.sample assets/example.md mv assets/example.md.conf.sample assets/example.md.conf git submodule init git submodule update morbo md2reveal 1 morbo md2reveal 1 2 3 4 { transition =&amp;gt; &amp;#39;zoom&amp;#39;, theme =&amp;gt; &amp;#39;default&amp;#39;, };</description>
        </item>
        <item>
        <title>Mojoliciousをどうしてもindex.cgiとして動かしたい</title>
        <link>https://www.nqou.net/2013/01/24/002300/</link>
        <pubDate>Thu, 24 Jan 2013 00:23:00 +0900</pubDate>
        
        <guid>https://www.nqou.net/2013/01/24/002300/</guid>
        <description>@nqounetです。 Mojoliciousで作っているアプリを、どうしてもindex.cgiで動かす必要があって、とりあえず、動くようにな</description>
        </item>
        <item>
        <title>#Perl入学式 #11 で講師役をしてきました</title>
        <link>https://www.nqou.net/2012/12/18/143300/</link>
        <pubDate>Tue, 18 Dec 2012 14:33:00 +0900</pubDate>
        
        <guid>https://www.nqou.net/2012/12/18/143300/</guid>
        <description></description>
        </item>
        <item>
        <title>Mojoliciousのログにパッケージ名と行数も出力してみた</title>
        <link>https://www.nqou.net/2012/11/09/080000/</link>
        <pubDate>Fri, 09 Nov 2012 08:00:00 +0900</pubDate>
        
        <guid>https://www.nqou.net/2012/11/09/080000/</guid>
        <description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 package MyappPL; use Mojo::Base &amp;#39;Mojolicious&amp;#39;; # This method will run once at server start sub startup { my $self = shift; # ここから if ($self-&amp;gt;log-&amp;gt;is_level(&amp;#39;debug&amp;#39;)) { no warnings &amp;#39;redefine&amp;#39;; *Mojo::Log::format = sub {</description>
        </item>
        <item>
        <title>今度の日曜日はPerl入学式#5です</title>
        <link>https://www.nqou.net/2012/05/26/073000/</link>
        <pubDate>Sat, 26 May 2012 07:30:00 +0900</pubDate>
        
        <guid>https://www.nqou.net/2012/05/26/073000/</guid>
        <description></description>
        </item>
        <item>
        <title>Mojo::URLでschemeが変更できなくて困っていた話</title>
        <link>https://www.nqou.net/2011/10/04/120000/</link>
        <pubDate>Tue, 04 Oct 2011 12:00:00 +0900</pubDate>
        
        <guid>https://www.nqou.net/2011/10/04/120000/</guid>
        <description>Mojoliciousで、必ずhttpsの状態でアクセスされるように、こんな感じのコードを書いていたのですが、思ったように動かなくて困りまし</description>
        </item>
        <item>
        <title>うわさのPJAXをMojolicious::Liteで書いてみた</title>
        <link>https://www.nqou.net/2011/09/27/060000/</link>
        <pubDate>Tue, 27 Sep 2011 06:00:00 +0900</pubDate>
        
        <guid>https://www.nqou.net/2011/09/27/060000/</guid>
        <description></description>
        </item>
        <item>
        <title>sourcereader.cgiをMojolicious::Liteで書きなおした</title>
        <link>https://www.nqou.net/2011/06/09/060000/</link>
        <pubDate>Thu, 09 Jun 2011 06:00:00 +0900</pubDate>
        
        <guid>https://www.nqou.net/2011/06/09/060000/</guid>
        <description>Mojolicious::Liteネタですが、もう周回遅れ気味ですね。 6月3日にversion1.41になっています。 このスクリプトは、 de</description>
        </item>
        <item>
        <title>Mojolicious::LiteとData::ModelとjQueryでAJAXなチャットを作ってみた</title>
        <link>https://www.nqou.net/2011/01/10/014314/</link>
        <pubDate>Mon, 10 Jan 2011 01:43:14 +0900</pubDate>
        
        <guid>https://www.nqou.net/2011/01/10/014314/</guid>
        <description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70</description>
        </item>
        <item>
        <title>ORLiteを日本語に対応させるテクニック</title>
        <link>https://www.nqou.net/2011/01/04/232046/</link>
        <pubDate>Tue, 04 Jan 2011 23:20:46 +0900</pubDate>
        
        <guid>https://www.nqou.net/2011/01/04/232046/</guid>
        <description>Mojolicious::Liteの記事でORLiteが日本語には対応できていません、と書いていたところ、スクリプト側で対応させる方法を教え</description>
        </item>
        <item>
        <title>Mojolicious::LiteでDBIx::Skinnyを使ってみた</title>
        <link>https://www.nqou.net/2011/01/03/041042/</link>
        <pubDate>Mon, 03 Jan 2011 04:10:42 +0900</pubDate>
        
        <guid>https://www.nqou.net/2011/01/03/041042/</guid>
        <description>基本的には前記事と同じです。 私の観測範囲ではData::ModelよりもDBIx::Skinnyの方がよく使われているような気がしますが、テ</description>
        </item>
        <item>
        <title>Mojolicious::LiteでData::Modelを使ってみた</title>
        <link>https://www.nqou.net/2011/01/02/205559/</link>
        <pubDate>Sun, 02 Jan 2011 20:55:59 +0900</pubDate>
        
        <guid>https://www.nqou.net/2011/01/02/205559/</guid>
        <description>先日1.0にバージョンアップしたMojolicious（::Lite）を本格的に触ってみようとアレコレやってみた。 MojoliciousのW</description>
        </item>
        
    </channel>
</rss>
